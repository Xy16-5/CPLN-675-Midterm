n_new <- merge(n[1,],n[2,])
n_new
n1 <- c(63,32,86,53,49,73,39,55,45,67,49,51,65,54,56)
n2 = c(52,75,74,68,93,77,41,87,72,53,85,65,66,69,62)
n2
n1
mean(n1)
mean(n2)
n_all <- n1 + n2
n_all
n_all <- c(n1, n2)
n_all
t_test(n_all)
t.test(n_all)
t.test(n_all, 85)
get_summary_stats(n_all, type="mean_sd")
summary(n_all, type="mean_sd")
sd(n_all)
62.52-85
bo <- 15.10/(30)^0.5
(62.52-85)/bo
sd(n1)
sd(n2)
(mean(n1)-mean(n2))/(sd(n1)^2/15+sd(n2)^2/15)^0.5
setwd("G:\\UPenn\\CPLN505_PlaningByNumbers\\Assign2")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
options(knitr.kable.NA = '')
options(scipen = 999, digits=2)
#install.packages("formattable")
#install.packages("qwraps2")
#install.packages("arsenal")
#install.packages("pander")
#install.packages ("gmodels")
#install.packages ("MASS")
#install.packages("Hmisc")
library(tidyverse)
library(sf)
library(ggplot2)
library(formattable)
library(stargazer)
library(knitr)
library(qwraps2)
library(arsenal)
library(viridis)
library(gmodels)
library(MASS)
library(Hmisc)
library(ggcorrplot)
setwd("G:\\UPenn\\CPLN505_PlaningByNumbers\\Assign2")
dat <- read.csv("cwns2012.csv")
dat_new <- dat %>%
mutate (
PROJ_CHG_RES_COLLCTN = PROJ_RES_REC_COLLCTN - PRES_RES_REC_COLLCTN,
PROJ_PCHG_RES_COLLCTN = PROJ_CHG_RES_COLLCTN / PRES_RES_REC_COLLCTN,
PROJ_CHG_RES_TRMT = PROJ_RES_REC_TRMT - PRES_RES_REC_TRMT,
PROJ_PCHG_RES_TRMT = PROJ_CHG_RES_TRMT / PRES_RES_REC_TRMT,
PROJ_CHG_N_RES_COLLCTN = PROJ_N_RES_REC_COLLCTN - PRES_N_RES_REC_COLLCTN,
PROJ_PCHG_N_RES_COLLCTN = PROJ_CHG_N_RES_COLLCTN / PRES_N_RES_REC_COLLCTN,
PROJ_CHG_N_RES_TRMT = PROJ_N_RES_REC_TRMT - PRES_N_RES_REC_TRTM,
PROJ_PCHG_N_RES_TRMT = PROJ_CHG_N_RES_TRMT / PRES_N_RES_REC_TRTM,
POP_DENS_00 = ALAND / POP00,
POP_DENS_10 = ALAND / POP10,
CHG_POP_DENS_10 = POP_DENS_10 - POP_DENS_00,
PCHG_POP_DENS_10 = CHG_POP_DENS_10 / POP_DENS_00,
PCHG_MEDINC_09 = (MEDINC09 - MEDINC99) / MEDINC99
)
top10_all <- dat_new %>% slice_max(TOTAL_OFFICIAL_NEED,n=10) %>%
dplyr::select(CWNS_NUMBER, TOTAL_OFFICIAL_NEED,EPA_REGION,FACILITY_CITY)
bottom10_all <- dat_new %>%
filter(TOTAL_OFFICIAL_NEED > 0 ) %>%
slice_min(TOTAL_OFFICIAL_NEED, n=10) %>%
arrange((TOTAL_OFFICIAL_NEED)) %>%
dplyr::select(CWNS_NUMBER, TOTAL_OFFICIAL_NEED,EPA_REGION,FACILITY_CITY)
kable(top10_all, caption = "Table 1. Top 10 Facilities with greatest need", align = 'r')
kable(bottom10_all, caption = "Table 2. Bottom 10 Facilities with least need", align = 'r')
top10_three <- dat_new %>%
filter (EPA_REGION == "3") %>%
slice_max(TOTAL_OFFICIAL_NEED,n=10) %>%
dplyr::select(CWNS_NUMBER, TOTAL_OFFICIAL_NEED,EPA_REGION,FACILITY_CITY)
kable(top10_three, caption = "Table 3. Top 10 Facilities with most need in EPA region 3", align = 'r')
facility_phil <- dat_new %>%
filter(grepl("Philadelphia", FACILITY_CITY, ignore.case = T),
COUNTYNAME == "Philadelphia")
nrow(facility_phil)
dat_general <- dat_new %>%
dplyr::select(TOTAL_OFFICIAL_NEED)
kable(summary(dat_general), caption = "Table 4. Summary Statistic for Total Official Need")
dat_res_collctn <- dat_new %>%
dplyr::select(PRES_RES_REC_COLLCTN, PROJ_RES_REC_COLLCTN, PROJ_CHG_RES_COLLCTN, PROJ_PCHG_RES_COLLCTN, PROJ_RES_YR)
kable(summary(dat_res_collctn), caption = "Table 5A. Summary Statistic for Residents Collection")
dat_res_trmt <- dat_new %>%
dplyr::select(PRES_RES_REC_TRMT, PROJ_RES_REC_TRMT, PROJ_CHG_RES_TRMT, PROJ_PCHG_RES_TRMT)
kable(summary(dat_res_trmt), caption = "Table 5B. Summary Statistic for Residents Treatment")
dat_n_res_collctn <- dat_new %>%
dplyr::select(PRES_N_RES_REC_COLLCTN, PROJ_N_RES_REC_COLLCTN, PROJ_CHG_N_RES_COLLCTN, PROJ_PCHG_N_RES_COLLCTN, PROJ_N_RES_YR)
kable(summary(dat_n_res_collctn), caption = "Table 6A. Summary Statistic for Non-Residents Collection")
dat_n_res_trmt <- dat_new %>%
dplyr::select(PRES_N_RES_REC_TRTM, PROJ_N_RES_REC_TRMT, PROJ_CHG_N_RES_TRMT, PROJ_PCHG_N_RES_TRMT)
kable(summary(dat_n_res_trmt), caption = "Table 6B. Summary Statistic for Non-Residents Treatment")
dat_geo <- dat_new %>%
dplyr::select(ALAND, AWATER)
kable(summary(dat_geo), caption = "Table 7. Summary Statistic for Land and Water Area of County")
dat_medinc <- dat_new %>%
dplyr::select(MEDINC69, MEDINC79, MEDINC89, MEDINC99, MEDINC09, PCHG_MEDINC_09)
kable(summary(dat_medinc), caption = "Table 8. Summary Statistic for Median Income in County")
dat_pop <- dat_new %>%
dplyr::select(POP80, POP90, POP00, POP10)
kable(summary(dat_pop), caption = "Table 9A. Summary Statistic for Population in County")
dat_pop_dens <- dat_new %>%
dplyr::select(POP_DENS_00, POP_DENS_10, CHG_POP_DENS_10, PCHG_POP_DENS_10)
kable(summary(dat_pop_dens), caption = "Table 9B. Summary Statistic for Population Density in County")
dat_white <- dat_new %>%
dplyr::select(PCTWHITE00, PCTWHITE10)
kable(summary(dat_white), caption = "Table 10. Summary Statistic for Percent White in County")
dat_cat <- dat_new %>%
dplyr::select(EPA_REGION, STATE, OWNER_TYPE, TMDL_INDICATOR, CSS, MS4) %>%
mutate(EPA_REGION = as.factor(EPA_REGION),
STATE = as.factor(STATE),
OWNER_TYPE = as.factor(OWNER_TYPE),
TMDL_INDICATOR = as.factor(TMDL_INDICATOR),
CSS = as.factor(CSS),
MS4 = as.factor(MS4))
kable(summary(dat_cat), caption = "Table 11. Frequencies of Categorical Data")
ggplot(dat_new, aes(x=as.factor(EPA_REGION), y=log(TOTAL_OFFICIAL_NEED), fill=as.factor(EPA_REGION)))+
geom_boxplot(color="gray")+
scale_y_continuous(name = "Log of Total Official Need") +
scale_x_discrete(name = "EPA Region") +
scale_fill_viridis(name = "EPA Region", discrete = T)+
labs(caption="Figure 1. Boxplot of need by EPA region")
ggplot(dat_new, aes(x=TOTAL_OFFICIAL_NEED, fill = as.factor(EPA_REGION)))+
geom_histogram()+
scale_y_continuous("Frequency") +
scale_x_log10("Log of Total Official Need") +
scale_fill_viridis(name="EPA Region", discrete=T, option="D")+
labs(caption="Figure 2. Histogram of need by EPA region")+
facet_wrap(~EPA_REGION)
ggplot(dat_new, aes(x=TOTAL_OFFICIAL_NEED, group=as.factor(EPA_REGION), color=as.factor(EPA_REGION)))+
geom_density(size=2)+
scale_x_log10(name="Log of total official need")+
scale_y_continuous(name = "Density") +
scale_color_viridis(name = "EPA Region", discrete=TRUE, option="D", alpha=0.8)+
labs(caption="Figure 3. Density plot of need by EPA region")
dat_sw <- dat_new %>%
filter(CSS == 1 & MS4 == 0 || CSS == 0 & MS4 == 1) #Check independence
var.test(TOTAL_OFFICIAL_NEED ~ CSS, dat_new) #Check variance
ggplot(dat_new, aes(TOTAL_OFFICIAL_NEED, group=as.factor(CSS), color=as.factor(CSS))) +
geom_density(size=2)+
scale_x_log10(name="Log of total official need")+
scale_color_viridis(name = "Sewer system", discrete=TRUE, option="D", labels=c("MS4", "CSS"))+
labs(caption="Figure 4. Density plot of need by CSS or MS4") #Check distribution
t.test (TOTAL_OFFICIAL_NEED ~ CSS, data = dat_new, paired = FALSE)
unique(dat_new$TMDL_INDICATOR) #Check independence
var.test(TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, dat_new) #Check variance
ggplot(dat_new, aes(TOTAL_OFFICIAL_NEED, group=as.factor(TMDL_INDICATOR), color=as.factor(TMDL_INDICATOR))) +
geom_density(size=2)+
scale_x_log10(name="Log of total official need")+
scale_color_viridis(name = "TMDL", discrete=TRUE, option="D", labels=c("No", "Yes"))+
labs(caption="Figure 5. Density plot of need by yes or no TMDL receiing water body") #Check distribution
t.test (TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = dat_new, paired = FALSE)
tmdl_t_test_table <-c()
for (val in c(1,2,3,4,5,6,9,10)) {
dat_tmdl <- dat_new %>%
filter(EPA_REGION == val)
res <- t.test (TOTAL_OFFICIAL_NEED ~ TMDL_INDICATOR, data = dat_tmdl, paired = FALSE)
tmdl_t_test_table <- rbind(tmdl_t_test_table,c(val, res[3]$p.value, res[5]$estimate[1], res[5]$estimate[2]))
}
kable(tmdl_t_test_table, caption = "Table 12. T-test result of needs by TMDL by Region")
dat_new <- dat_new %>%
mutate(CAT_NEED = case_when(TOTAL_OFFICIAL_NEED <= 704599 ~ "1Q",
TOTAL_OFFICIAL_NEED <= 2409822 & TOTAL_OFFICIAL_NEED > 704599 ~ "2Q",
TOTAL_OFFICIAL_NEED <= 7660571 & TOTAL_OFFICIAL_NEED > 2409822 ~ "3Q",
TOTAL_OFFICIAL_NEED <= 5160108526 & TOTAL_OFFICIAL_NEED > 7660571 ~ "4Q"))
CrossTable (dat_new$CAT_NEED, dat_new$EPA_REGION, fisher = FALSE, chisq = TRUE,
expected = T, sresid = FALSE, format="SPSS")
#1. ALAND
dat_new <- dat_new %>%
mutate(CAT_ALAND = case_when(ALAND <= 1188217624 ~ "1Q",
ALAND <= 1698230440 & ALAND > 1188217624 ~ "2Q",
ALAND <= 2406244813 & ALAND > 1698230440 ~ "3Q",
ALAND > 2406244813 ~ "4Q"))
CrossTable (dat_new$CAT_ALAND, dat_new$CAT_NEED, fisher = FALSE, chisq = TRUE,
expected = T, sresid = FALSE, format="SPSS") #p: 0.000000014 < 0.05
#2. MEDINC09
dat_new <- dat_new %>%
mutate(CAT_MEDINC09 = case_when(MEDINC09 <= 48855 ~ "1Q",
MEDINC09 <= 56711 & MEDINC09 > 48855 ~ "2Q",
MEDINC09 <= 65587 & MEDINC09 > 56711 ~ "3Q",
MEDINC09 > 65587 ~ "4Q"))
CrossTable (dat_new$CAT_MEDINC09, dat_new$CAT_NEED, fisher = FALSE, chisq = TRUE,
expected = T, sresid = FALSE, format="SPSS") #p: < 0.05
#3. POP10
dat_new <- dat_new %>%
mutate(CAT_POP10 = case_when(POP10 <= 26634 ~ "1Q",
POP10 <= 74319 & POP10 > 26634 ~ "2Q",
POP10 <= 270056 & POP10 > 74319 ~ "3Q",
POP10 > 270056 ~ "4Q"))
CrossTable (dat_new$CAT_POP10, dat_new$CAT_NEED, fisher = FALSE, chisq = TRUE,
expected = T, sresid = FALSE, format="SPSS") #p: < 0.05
#4. PCTWHITE10
dat_new <- dat_new %>%
mutate(CAT_PCTWHITE10 = case_when(PCTWHITE10<= 74 ~ "1Q",
PCTWHITE10 <= 87 & PCTWHITE10 > 74 ~ "2Q",
PCTWHITE10 <= 94 & PCTWHITE10 > 87 ~ "3Q",
PCTWHITE10 > 94 ~ "4Q"))
CrossTable (dat_new$CAT_PCTWHITE10, dat_new$CAT_NEED, fisher = FALSE, chisq = TRUE,
expected = T, sresid = FALSE, format="SPSS") #p: < 0.05
#5. POP_DENS_10
dat_new <- dat_new %>%
mutate(CAT_POP_DENSE_10 = case_when(POP_DENS_10 <= 6714 ~ "1Q",
POP_DENS_10 <= 24443 & POP_DENS_10 > 6714 ~ "2Q",
POP_DENS_10 <= 69436 & POP_DENS_10 > 24443 ~ "3Q",
POP_DENS_10 > 69436 ~ "4Q"))
CrossTable (dat_new$CAT_POP_DENSE_10, dat_new$CAT_NEED, fisher = FALSE, chisq = TRUE,
expected = T, sresid = FALSE, format="SPSS") #p:  < 0.05
dat_long <-
gather(dat_new, VAR_NAME, VAR_VALUE, ALAND, MEDINC09, POP10, PCTWHITE10, POP_DENS_10, TOTAL_OFFICIAL_NEED, factor_key = T)
phl_long <-
gather(facility_phil, VAR_NAME, VAR_VALUE, ALAND, MEDINC09, POP10, PCTWHITE10, POP_DENS_10, TOTAL_OFFICIAL_NEED, factor_key = T)
ggplot(dat_long, aes(x=VAR_NAME, y=VAR_VALUE, fill=VAR_NAME))+
geom_boxplot(color="gray", alpha=0.5)+
scale_x_discrete(name = "Variables") +
scale_y_log10(name="Log of value")+
scale_fill_viridis(name = "Variables", discrete = T)+
geom_point(
data=phl_long, aes(x=VAR_NAME, y=VAR_VALUE),color="red"
)+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 6. Philly facilities' position")
dat_long2 <-
gather(dat_new, VAR_NAME, VAR_VALUE, ALAND, MEDINC09, POP10, PCTWHITE10, POP_DENS_10, factor_key = T)
ggplot(data=dat_long2) +
geom_point(aes(x=VAR_VALUE, y=TOTAL_OFFICIAL_NEED, color=VAR_NAME))+
geom_smooth(method = "lm", aes(x=VAR_VALUE, y=TOTAL_OFFICIAL_NEED), color="black")+
scale_color_viridis(name = "Variables", discrete = T)+
scale_x_discrete(name = "Variables") +
scale_y_continuous(name="Total need")+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 7. Scatterplots between variables and reported need")
dat_long_aland <-
gather(dat_new, VAR_NAME, VAR_VALUE, MEDINC09, POP10, PCTWHITE10, POP_DENS_10, factor_key = T) %>%
ggplot() +
geom_point(aes(y=VAR_VALUE, x=ALAND, color=VAR_NAME))+
geom_smooth(method = "lm", aes(y=VAR_VALUE, x=ALAND), color="black")+
scale_color_viridis(name = "Variables", discrete = T)+
scale_x_continuous(name = "Land Area") +
scale_y_continuous(name="Variables")+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 8. Scatterplots between land area and other variables")
dat_long_medinc09 <-
gather(dat_new, VAR_NAME, VAR_VALUE, ALAND, POP10, PCTWHITE10, POP_DENS_10, factor_key = T) %>%
ggplot()+
geom_point(aes(y=VAR_VALUE, x=MEDINC09, color=VAR_NAME))+
geom_smooth(method = "lm", aes(y=VAR_VALUE, x=MEDINC09), color="black")+
scale_color_viridis(name = "Variables", discrete = T)+
scale_x_continuous(name = "09 Median income") +
scale_y_continuous(name="Variables")+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 9. Scatterplots between 2009 median income and other variables")
dat_long_pop10 <-
gather(dat_new, VAR_NAME, VAR_VALUE, ALAND, MEDINC09, PCTWHITE10, POP_DENS_10, factor_key = T) %>%
ggplot()+
geom_point(aes(y=VAR_VALUE, x=POP10, color=VAR_NAME))+
geom_smooth(method = "lm", aes(y=VAR_VALUE, x=POP10), color="black")+
scale_color_viridis(name = "Variables", discrete = T)+
scale_x_continuous(name = "2010 Population") +
scale_y_continuous(name="Variables")+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 10. Scatterplots between 2010 population and other variables")
dat_long_pctwhite10 <-
gather(dat_new, VAR_NAME, VAR_VALUE, ALAND, MEDINC09, POP10, POP_DENS_10, factor_key = T) %>%
ggplot()+
geom_point(aes(y=VAR_VALUE, x=PCTWHITE10, color=VAR_NAME))+
geom_smooth(method = "lm", aes(y=VAR_VALUE, x=PCTWHITE10), color="black")+
scale_color_viridis(name = "Variables", discrete = T)+
scale_x_continuous(name = "2010 Percentage white") +
scale_y_continuous(name="Variables")+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 11. Scatterplots between 2010 percentage white and other variables")
dat_long_popdense10 <-
gather(dat_new, VAR_NAME, VAR_VALUE, ALAND, MEDINC09, POP10, PCTWHITE10, factor_key = T) %>%
ggplot()+
geom_point(aes(x=VAR_VALUE, y=POP_DENS_10, color=VAR_NAME))+
geom_smooth(method = "lm", aes(x=VAR_VALUE, y=POP_DENS_10), color="black")+
scale_color_viridis(name = "Variables", discrete = T)+
scale_x_continuous(name = "2010 Population density") +
scale_y_continuous(name="Variables")+
facet_wrap(~VAR_NAME, scale="free")+
labs(caption = "Figure 12. Scatterplots between 2010 population density and other variables")
dat_long_aland
dat_long_medinc09
dat_long_pop10
dat_long_pctwhite10
dat_long_popdense10
dat_var <- dat_new %>%
dplyr::select(ALAND, MEDINC09, POP10, PCTWHITE10, POP_DENS_10, TOTAL_OFFICIAL_NEED)
#(cor(dat_var[]))
rcorr(as.matrix(dat_var[]), type = c("pearson"))
dat_reg <- dat_new %>%
mutate(LOG_TOTAL_NEED = log(TOTAL_OFFICIAL_NEED),
PRES_RES = ifelse(PRES_RES_REC_COLLCTN>PRES_RES_REC_TRMT, PRES_RES_REC_COLLCTN, PRES_RES_REC_TRMT),
RES_BURDEN = TOTAL_OFFICIAL_NEED / PRES_RES,
LOG_RES_BURDEN = log(RES_BURDEN)
)
is.na(dat_reg) <- sapply(dat_reg, is.infinite)
ggplot(dat_reg,aes(x=TOTAL_OFFICIAL_NEED))+
geom_histogram()+
labs(caption="Figure 13a. Histogram of need")
ggplot(dat_reg,aes(x=LOG_TOTAL_NEED))+
geom_histogram()+
labs(caption="Figure 13b. Histogram of log of need")
ggplot(dat_reg,aes(x=RES_BURDEN))+
geom_histogram()+
labs(caption="Figure 14a. Histogram of residential burden")
ggplot(dat_reg,aes(x=LOG_RES_BURDEN))+
geom_histogram()+
labs(caption="Figure 14b. Histogram of log of residential burden")
# Required Var
dat_reg <- dat_reg %>%
mutate(LOG_MEDINC09 = log(MEDINC09),
LOG_PCHG_MEDINC09 = log(PCHG_MEDINC_09), #not much change in dist
LOG_POP10 = log(POP10),
LOG_POP_DENS_10 = log(POP_DENS_10),
LOG_PRES_RES = log(PRES_RES),
PRES_NON_RES = (ifelse(PRES_N_RES_REC_COLLCTN>PRES_N_RES_REC_TRTM, PRES_N_RES_REC_COLLCTN, PRES_N_RES_REC_TRTM)),
#DUMMY
REG_NINE = ifelse(EPA_REGION==9, 1, 0),
GROWING = ifelse((POP10-POP00)>0, 1, 0),
NON_RES = ifelse(PRES_NON_RES==0, 0, 1)
)
final_var <- dat_reg %>%
dplyr::select(
TOTAL_OFFICIAL_NEED, LOG_TOTAL_NEED, RES_BURDEN, LOG_RES_BURDEN,
MEDINC09, LOG_MEDINC09, PCHG_MEDINC_09, LOG_PCHG_MEDINC09,
POP10, LOG_POP10, PRES_RES, LOG_PRES_RES,
POP_DENS_10, LOG_POP_DENS_10, CHG_POP_DENS_10, PCHG_POP_DENS_10,
PCTWHITE10,
REG_NINE, CSS, TMDL_INDICATOR, NON_RES,
) %>% na.omit()
numericVars <- final_var %>%
dplyr::select(-REG_NINE, -CSS, -TMDL_INDICATOR, -NON_RES,
-TOTAL_OFFICIAL_NEED, -LOG_TOTAL_NEED, -RES_BURDEN, -LOG_RES_BURDEN,)
ggcorrplot(
round(cor(numericVars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#25CB10", "white", "#FA7800"),
insig = "blank") +
labs(title = "Correlation across numeric variables",
caption = "Figure 15. Correlation matrix for explanatory variables")
View(dat_white)
getwd()
library(tidyverse)
library(sf)
library(QuantPsyc)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(caret)
library(spatstat)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(plotROC)
library(pROC)
setwd(G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm)
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm")
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm")
getwd()
getwd()
getwd()
landuse <- st_read("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\denver_gis\\existing_landuse_2018\\existing_landuse_2018.shp")
View(landuse)
View(landuse[[5]][[1]])
dem <- st_read("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\denver_gis\\GIS_output\\denverDEM.tif")
dem <- st_read("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\denver_gis\\GIS_output\\denverDEM.tiff")
library(raster)
elevation <- raster("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\denver_gis\\GIS_output\\denverDEM.tiff")
elevation <- raster("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\denver_gis\\GIS_output\\denverDEM.tif")
View(elevation)
elvation_1 <-
rasterToPoints(elevation) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = 3780)
View(elvation_1)
head(elevation_1)
glimpse(elevation_1)
hi
getwd()
glimpse(elevation_1)
glimpse(elvation_1)
getwd()
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm")
getwd()
denver <-
st_read("..\\denver_gis\\county_boundary\\county_boundary.shp") %>%
st_transform(crs=6428)
denver <-
st_read(".\\denver_gis\\county_boundary\\county_boundary.shp") %>%
st_transform(crs=6428)
denver <-
st_read(".\\.\\denver_gis\\county_boundary\\county_boundary.shp") %>%
st_transform(crs=6428)
getwd()
denver <-
st_read(".\\denver_gis\\county_boundary\\county_boundary.shp") %>%
st_transform(crs=6428)
denver <-
st_read("./denver_gis/county_boundary/county_boundary.shp") %>%
st_transform(crs=6428)
landuse <- st_read("denver_gis\\existing_landuse_2018\\existing_landuse_2018.shp")
landuse <- st_read("\\denver_gis\\existing_landuse_2018\\existing_landuse_2018.shp")
landuse <- st_read(".\\denver_gis\\existing_landuse_2018\\existing_landuse_2018.shp")
denver <-
st_read("./././denver_gis/county_boundary/county_boundary.shp") %>%
st_transform(crs=6428)
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm")
getwd()
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm")
root.dir
getwd()
denver <-
st_read("denver_gis/county_boundary/county_boundary.shp") %>%
st_transform(crs=6428)
fishnet <-
st_make_grid(denver, cellsize = 500) %>%
st_sf()
fishnet <-
fishnet[denver,] %>%
mutate(uniqueID = rownames(.)) %>%
dplyr::select(uniqueID)
ggplot(fishnet)
ggplot(denver)
plot(denver)
View(fishnet)
denver <-
st_read("denver_gis/county_boundary/county_boundary.shp") %>%
st_transform(crs=6428)
plot(denver)
View(denver)
ggplot(data=denver)+
geom_sf
ggplot(data=denver)+
geom_sf()
denver <-
st_read("denver_gis/county_boundary/county_boundary.shp") %>%
st_transform(crs=6428) %>%
dplyr::filter(COUNTY="Denver")
denver <-
st_read("denver_gis/county_boundary/county_boundary.shp") %>%
st_transform(crs=6428) %>%
dplyr::filter(COUNTY=="Denver")
View(denver)
fishnet <-
st_make_grid(denver, cellsize = 500) %>%
st_sf()
fishnet <-
fishnet[denver,] %>%
mutate(uniqueID = rownames(.)) %>%
dplyr::select(uniqueID)
ggplot(data=fishnet)+
geom_sf()
ggplot(data=landuse) +
geom_sf()
landuse <- st_read(".\\denver_gis\\existing_landuse_2018\\existing_landuse_2018.shp")
ggplot(data=landuse) +
geom_sf()
View(fishnet)
landuse <- st_read(".\\denver_gis\\existing_landuse_2018\\existing_landuse_2018.shp") %>%
st_transform(crs=6428)
landuse <- st_read(".\\denver_gis\\GIS_output\\denver_basin\\denver_basin.shp") %>%
st_transform(crs=6428)
basin <- st_read(".\\denver_gis\\GIS_output\\denver_boundary.shp") %>%
st_transform(crs=6428)
View(basin)
stream <- st_read(".\\denver_gis\\GIS_output\\stream.shp") %>%
st_transform(crs=6428)
stream <- st_read(".\\denver_gis\\GIS_output\\denver_stream.shp") %>%
st_transform(crs=6428)
View(stream)
try <- st_read("existing_landuse_2018.shp")
getwd()
try <- st_read("CPLN-675-Midterm\\denver\\existing_landuse_2018.shp")
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denver")
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denvor")
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm")
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denvor")
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denver")
getwd()
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denver")
getwd()
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denver")
getwd()
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm\\denver")
getwd()
try <- st_read("existing_landuse_2018.shp")
try <- st_read("existing_landuse_2018\\existing_landuse_2018.shp")
View(basin)
ggplot(data=basin) +
geom_sf()
