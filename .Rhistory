## watershed / basin
c_basin <- st_read("calgary\\calgary_basin\\c_basin.shp") %>%
st_transform(crs=3780) #doesn't seem to be useful
c_mainBasin <- c_basin %>%
filter(gridcode == 281) #the biggest basin within county boundary
## space reserved for land use
# code for visualization
# ggplot() +
#   geom_sf(data=c_boundary, fill=c_colors_hex[["land"]]) +
#   geom_sf(data=c_stream, color=c_colors_hex[["stream"]]) +
#   mapTheme()
# natural
## elevation
c_elevation_net <-
c_elevation %>%
aggregate(., c_fishnet, mean) %>%
mutate(elevation = grid_code) %>%
dplyr::select(elevation)
## slope
c_slope_net <-
c_slope %>%
aggregate(., c_fishnet, mean) %>%
mutate(slope = grid_code) %>%
dplyr::select(slope)
c_gentleSlope_net <-
c_gentleSlope %>%
mutate(c_gentleSlope =1) %>%
aggregate(., c_fishnet, sum) %>%
mutate(gentleSlope = ifelse(is.na(c_gentleSlope), 0, c_gentleSlope))%>%
dplyr::select(gentleSlope)
c_steepSlope_net <-
c_steepSlope %>%
mutate(c_steepSlope =1) %>%
aggregate(., c_fishnet, sum) %>%
mutate(steepSlope = ifelse(is.na(c_steepSlope), 0, c_steepSlope))%>%
dplyr::select(steepSlope)
## watershed / basin
c_basin_net <-
c_mainBasin %>%
mutate(c_mainBasin = 1) %>%
aggregate(., c_fishnet, mean) %>%
mutate(mainBasin = ifelse(is.na(c_mainBasin), 0, c_mainBasin))%>%
dplyr::select(mainBasin)
## ...space reserved for land use...
# Combine features together
c_vars_net <-
cbind(c_elevation_net,c_slope_net, c_gentleSlope_net, c_steepSlope_net, c_basin_net)%>%
dplyr::select(elevation, slope, gentleSlope, steepSlope, mainBasin)%>%
mutate(uniqueID = rownames(.))
c_vars_net <- c_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 3),
gentleSlope.nn4 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 4),
gentleSlope.nn5 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 5),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 3),
downstream.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 3)
)
View(c_vars_net)
# Combine features together
c_vars_net <-
cbind(c_elevation_net,c_slope_net, c_gentleSlope_net, c_steepSlope_net, c_basin_net)%>%
dplyr::select(elevation, slope, gentleSlope, steepSlope, mainBasin)%>%
mutate(uniqueID = rownames(.))
c_vars_net <- c_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 3),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 1),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 2),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 3),
downstream.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 1)
downstream.nn3 =
c_vars_net <- c_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 3),
steepSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 1),
steepSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 2),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 3),
downstream.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 1)
downstream.nn2 =
c_vars_net <- c_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 3),
steepSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 1),
steepSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 2),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 3),
downstream.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 1),
downstream.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 2),
downstream.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 3),
)
# Combine features together
c_vars_net <-
cbind(c_elevation_net,c_slope_net, c_gentleSlope_net, c_steepSlope_net, c_basin_net)%>%
dplyr::select(elevation, slope, gentleSlope, steepSlope, mainBasin)%>%
mutate(uniqueID = rownames(.))
c_vars_net <- c_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 3),
steepSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 1),
downstream.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 1),
)
View(c_vars_net)
# Combine features together
c_vars_net <-
cbind(c_elevation_net,c_slope_net, c_gentleSlope_net, c_steepSlope_net, c_basin_net)%>%
dplyr::select(elevation, slope, gentleSlope, steepSlope, mainBasin)%>%
mutate(uniqueID = rownames(.))
c_vars_net <- c_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_gentleSlope), 3),
steepSlope.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 1),
steepSlope.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 2),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_steepSlope), 3),
downstream.nn1 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 1),
downstream.nn2 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 2),
downstream.nn3 =
nn_function(st_coordinates(st_centroid(c_vars_net)), st_coordinates(c_downstream), 3),
)
st_write(c_vars_net, "c_vars_net.shp")
st_write(c_vars_net, "c_vars_net.shp")
c_vars_net <- st_read("c_vars_net.shp")
c_vars <-
c_vars_net %>%
dplyr::select(elevation,
slope, gentleSlope, steepSlope,
gentleSlope.nn, steepSlope.nn,
mainBasin,
downstream.nn)
c_vars <-
c_vars_net %>%
dplyr::select(elevatn,
slope, gntlSlp, stepSlp,
gntlS_1, gntlS_2, gntlS_3,
stpSl_1, stpSl_2, stpSl_3,
mainBsn,
dwnstr_1, dwnstr_2, dwnstr_3)
c_vars <-
c_vars_net %>%
dplyr::select(elevatn,
slope, gntlSlp, stepSlp,
gntlS_1, gntlS_2, gntlS_3,
stpSl_1, stpSl_2, stpSl_3,
mainBsn,
dwnst_1, dwnst_2, dwnst_3)
c_vars_long <-
c_vars %>%
gather(Variable, value, -geometry)
c_vars <- unique(c_vars_long$Variable)
c_mapList <- list()
for(i in c_vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(c_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
c_mapList <- list()
for(i in c_vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(c_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
c_mapList[[i]] <-
ggplot() +
geom_sf(data = filter(c_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
for(i in c_vars){
c_mapList[[i]] <-
ggplot() +
geom_sf(data = filter(c_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(mapList, ncol =2, top = "Risk Factors by Fishnet"))
do.call(grid.arrange,c(c_mapList, ncol =2, top = "Risk Factors by Fishnet"))
do.call(grid.arrange,c(c_mapList, ncol =4, top = "Risk Factors by Fishnet"))
d_boundary <-
st_read("denver/denver_boundary/county_boundary.shp") %>%
st_transform(crs=6428) %>%
dplyr::filter(COUNTY=="Denver")
d_fishnet <-
st_make_grid(d_boundary, cellsize = 500) %>%
st_sf()
d_fishnet <-
d_fishnet[d_boundary,] %>%
mutate(uniqueID = rownames(.)) %>%
dplyr::select(uniqueID)
ggplot(data=d_fishnet)+
geom_sf(color=d_colors_hex[["stream"]], fill=d_colors_hex[["land"]]) +
mapTheme()
# natural
## elevation
d_elevation <- st_read("denver\\d_DEM.shp") %>%
st_transform(crs=6428)
## slope
d_slope <- st_read("denver\\denver_slope\\d_slope.shp") %>%
st_transform(crs=6428)
d_gentleSlope <- d_slope %>%
filter(grid_code > 3)
d_steepSlope <- d_slope %>%
filter(grid_code >= 20)
# hydrological
## stream
d_stream <- st_read("denver\\denver_stream\\denver_stream.shp") %>%
st_transform(crs=6428)
d_streamOrder <- st_read("denver\\denver_streamOrder\\d_streamOrder.shp") %>%
st_transform(crs=6428)
d_downstream <- d_streamOrder %>%
filter(grid_code == 3)
## watershed / basin
d_basin <- st_read("denver\\denver_basin\\denver_boundary.shp") %>%
st_transform(crs=6428) #doesn't seem to be useful
d_mainBasin <- d_basin %>%
filter(gridcode == 864) #the biggest basin within county boundary
## space reserved for land use
# code for visualization
# ggplot() +
#   geom_sf(data=d_boundary, fill=d_colors_hex[["land"]]) +
#   geom_sf(data=d_stream, color=d_colors_hex[["stream"]]) +
#   mapTheme()
# natural
## elevation
d_elevation_net <-
d_elevation %>%
aggregate(., d_fishnet, mean) %>%
mutate(elevation = grid_code) %>%
dplyr::select(elevation)
## slope
d_slope_net <-
d_slope %>%
aggregate(., d_fishnet, mean) %>%
mutate(slope = grid_code) %>%
dplyr::select(slope)
d_gentleSlope_net <-
d_gentleSlope %>%
mutate(d_gentleSlope =1) %>%
aggregate(., d_fishnet, sum) %>%
mutate(gentleSlope = ifelse(is.na(d_gentleSlope), 0, d_gentleSlope))%>%
dplyr::select(gentleSlope)
d_steepSlope_net <-
d_steepSlope %>%
mutate(d_steepSlope =1) %>%
aggregate(., d_fishnet, sum) %>%
mutate(steepSlope = ifelse(is.na(d_steepSlope), 0, d_steepSlope))%>%
dplyr::select(steepSlope)
## watershed / basin
d_basin_net <-
d_mainBasin %>%
mutate(d_mainBasin = 1) %>%
aggregate(., d_fishnet, mean) %>%
mutate(mainBasin = ifelse(is.na(d_mainBasin), 0, d_mainBasin))%>%
dplyr::select(mainBasin)
## ...space reserved for land use...
d_landuse <- st_read("denver\\existing_landuse_2018\\existing_landuse_2018.shp") %>%
st_transform(crs=6428)
# Combine features together
d_vars_net <-
cbind(d_elevation_net,d_slope_net, d_gentleSlope_net, d_steepSlope_net, d_basin_net)%>%
dplyr::select(elevation, slope, gentleSlope, steepSlope, mainBasin)%>%
mutate(uniqueID = rownames(.))
st_write(d_vars_net, "d_vars_net.shp")
d_vars_net <- d_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_gentleSlope), 3),
steepSlope.nn1 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_steepSlope), 1),
steepSlope.nn2 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_steepSlope), 2),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_steepSlope), 3),
downstream.nn1 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_downstream), 1),
downstream.nn2 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_downstream), 2),
downstream.nn3 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_downstream), 3),
)
st_write(d_vars_net, "d_vars_net.shp")
d_vars_net <- st_read("d_vars_net.shp")
View(d_vars_net)
# Combine features together
d_vars_net <-
cbind(d_elevation_net,d_slope_net, d_gentleSlope_net, d_steepSlope_net, d_basin_net)%>%
dplyr::select(elevation, slope, gentleSlope, steepSlope, mainBasin)%>%
mutate(uniqueID = rownames(.))
d_vars_net <- d_vars_net %>%
mutate(
gentleSlope.nn1 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_gentleSlope), 1),
gentleSlope.nn2 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_gentleSlope), 2),
gentleSlope.nn3 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_gentleSlope), 3),
steepSlope.nn1 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_steepSlope), 1),
steepSlope.nn2 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_steepSlope), 2),
steepSlope.nn3 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_steepSlope), 3),
downstream.nn1 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_downstream), 1),
downstream.nn2 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_downstream), 2),
downstream.nn3 =
nn_function(st_coordinates(st_centroid(d_vars_net)), st_coordinates(d_downstream), 3),
)
st_write(d_vars_net, "d_vars_net.shp")
d_vars_net <- st_read("d_vars_net.shp")
d_vars <-
d_vars_net %>%
dplyr::select(elevatn,
slope, gntlSlp, stepSlp,
gntlS_1, gntlS_2, gntlS_3,
stpSl_1, stpSl_2, stpSl_3,
mainBsn,
dwnst_1, dwnst_2, dwnst_3)
d_vars_long <-
d_vars %>%
gather(Variable, value, -geometry)
d_vars <- unique(d_vars_long$Variable)
d_mapList <- list()
for(i in d_vars){
mapList[[i]] <-
ggplot() +
geom_sf(data = filter(d_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
d_mapList[[i]] <-
ggplot() +
geom_sf(data = filter(d_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
for(i in d_vars){
d_mapList[[i]] <-
ggplot() +
geom_sf(data = filter(d_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(d_mapList, ncol =2, top = "Risk Factors by Fishnet"))
do.call(grid.arrange,c(d_mapList, ncol =4, top = "Risk Factors by Fishnet"))
library(dplyr)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(caret)
library(spatstat)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(plotROC)
library(pROC)
library(raster)
# Gillian's working directory
setwd("G:\\UPenn\\CPLN675_LandUse_and_EnvironmentalModeling\\midterm\\CPLN-675-Midterm")
# Nearest neighbor function
nn_function <- function(measureFrom,measureTo,k) {
measureFrom_Matrix <-
as.matrix(measureFrom)
measureTo_Matrix <-
as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
# Map theme for maps
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
plot.background = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
)
}
# Color for ggplots
## Calgary
c_colors_hex <- c("#4a6fa5", "#dbe9ee")
names(c_colors_hex) <- c("land", "stream")
## Denver
d_colors_hex <- c("#4f6d7a", "#c0d6df")
names(d_colors_hex) <- c("land", "stream")
c_vars_net <- st_read("c_vars_net.shp")
c_vars_net <- st_read("c_vars_net.shp")
c_vars <-
c_vars_net %>%
dplyr::select(elevatn,
slope, gntlSlp, stepSlp,
gntlS_1, gntlS_2, gntlS_3,
stpSl_1, stpSl_2, stpSl_3,
mainBsn,
dwnst_1, dwnst_2, dwnst_3)
c_vars_long <-
c_vars %>%
gather(Variable, value, -geometry)
c_vars <- unique(c_vars_long$Variable)
c_mapList <- list()
for(i in c_vars){
c_mapList[[i]] <-
ggplot() +
geom_sf(data = filter(c_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(c_mapList, ncol =4, top = "Risk Factors by Fishnet"))
d_vars_net <- st_read("d_vars_net.shp")
d_vars <-
d_vars_net %>%
dplyr::select(elevatn,
slope, gntlSlp, stepSlp,
gntlS_1, gntlS_2, gntlS_3,
stpSl_1, stpSl_2, stpSl_3,
mainBsn,
dwnst_1, dwnst_2, dwnst_3)
d_vars_long <-
d_vars %>%
gather(Variable, value, -geometry)
d_vars <- unique(d_vars_long$Variable)
d_mapList <- list()
for(i in d_vars){
d_mapList[[i]] <-
ggplot() +
geom_sf(data = filter(d_vars_long, Variable == i), aes(fill=value), colour=NA) +
scale_fill_viridis(name="") +
labs(title=i) +
mapTheme()}
do.call(grid.arrange,c(d_mapList, ncol =4, top = "Risk Factors by Fishnet"))
